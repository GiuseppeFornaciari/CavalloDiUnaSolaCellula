//------------------------------------------------------------------------------
// <auto-generated>
//    Codice generato da un modello.
//
//    Le modifiche manuali a questo file potrebbero causare un comportamento imprevisto dell'applicazione.
//    Se il codice viene rigenerato, le modifiche manuali al file verranno sovrascritte.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
namespace CavalloDiUnaSolaCellula.Models
{
    #region Contesti

    /// <summary>
    /// Nessuna documentazione sui metadati disponibile.
    /// </summary>
    public partial class CavalloDiUnaSolaCellulaEntities : ObjectContext
    {
        #region Costruttori
    
        /// <summary>
        /// Inizializza un nuovo oggetto CavalloDiUnaSolaCellulaEntities utilizzando la stringa di connessione trovata nella sezione 'CavalloDiUnaSolaCellulaEntities' del file di configurazione dell'applicazione.
        /// </summary>
        public CavalloDiUnaSolaCellulaEntities() : base("name=CavalloDiUnaSolaCellulaEntities", "CavalloDiUnaSolaCellulaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inizializzare un nuovo oggetto CavalloDiUnaSolaCellulaEntities.
        /// </summary>
        public CavalloDiUnaSolaCellulaEntities(string connectionString) : base(connectionString, "CavalloDiUnaSolaCellulaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inizializzare un nuovo oggetto CavalloDiUnaSolaCellulaEntities.
        /// </summary>
        public CavalloDiUnaSolaCellulaEntities(EntityConnection connection) : base(connection, "CavalloDiUnaSolaCellulaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Metodi parziali
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Proprietà ObjectSet
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        public ObjectSet<petizione> petizione
        {
            get
            {
                if ((_petizione == null))
                {
                    _petizione = base.CreateObjectSet<petizione>("petizione");
                }
                return _petizione;
            }
        }
        private ObjectSet<petizione> _petizione;
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        public ObjectSet<tab_mappa> tab_mappa
        {
            get
            {
                if ((_tab_mappa == null))
                {
                    _tab_mappa = base.CreateObjectSet<tab_mappa>("tab_mappa");
                }
                return _tab_mappa;
            }
        }
        private ObjectSet<tab_mappa> _tab_mappa;
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        public ObjectSet<tab_progetti> tab_progetti
        {
            get
            {
                if ((_tab_progetti == null))
                {
                    _tab_progetti = base.CreateObjectSet<tab_progetti>("tab_progetti");
                }
                return _tab_progetti;
            }
        }
        private ObjectSet<tab_progetti> _tab_progetti;
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        public ObjectSet<tab_utenti> tab_utenti
        {
            get
            {
                if ((_tab_utenti == null))
                {
                    _tab_utenti = base.CreateObjectSet<tab_utenti>("tab_utenti");
                }
                return _tab_utenti;
            }
        }
        private ObjectSet<tab_utenti> _tab_utenti;
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        public ObjectSet<random10Pezzi> random10Pezzi
        {
            get
            {
                if ((_random10Pezzi == null))
                {
                    _random10Pezzi = base.CreateObjectSet<random10Pezzi>("random10Pezzi");
                }
                return _random10Pezzi;
            }
        }
        private ObjectSet<random10Pezzi> _random10Pezzi;
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        public ObjectSet<tab_archiviomusica> tab_archiviomusica
        {
            get
            {
                if ((_tab_archiviomusica == null))
                {
                    _tab_archiviomusica = base.CreateObjectSet<tab_archiviomusica>("tab_archiviomusica");
                }
                return _tab_archiviomusica;
            }
        }
        private ObjectSet<tab_archiviomusica> _tab_archiviomusica;

        #endregion

        #region Metodi AddTo
    
        /// <summary>
        /// Metodo deprecato per l'aggiunta di un nuovo oggetto all'elemento EntitySet petizione. Utilizzare il metodo .Add della proprietà associata ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTopetizione(petizione petizione)
        {
            base.AddObject("petizione", petizione);
        }
    
        /// <summary>
        /// Metodo deprecato per l'aggiunta di un nuovo oggetto all'elemento EntitySet sysdiagrams. Utilizzare il metodo .Add della proprietà associata ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Metodo deprecato per l'aggiunta di un nuovo oggetto all'elemento EntitySet tab_mappa. Utilizzare il metodo .Add della proprietà associata ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTotab_mappa(tab_mappa tab_mappa)
        {
            base.AddObject("tab_mappa", tab_mappa);
        }
    
        /// <summary>
        /// Metodo deprecato per l'aggiunta di un nuovo oggetto all'elemento EntitySet tab_progetti. Utilizzare il metodo .Add della proprietà associata ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTotab_progetti(tab_progetti tab_progetti)
        {
            base.AddObject("tab_progetti", tab_progetti);
        }
    
        /// <summary>
        /// Metodo deprecato per l'aggiunta di un nuovo oggetto all'elemento EntitySet tab_utenti. Utilizzare il metodo .Add della proprietà associata ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTotab_utenti(tab_utenti tab_utenti)
        {
            base.AddObject("tab_utenti", tab_utenti);
        }
    
        /// <summary>
        /// Metodo deprecato per l'aggiunta di un nuovo oggetto all'elemento EntitySet random10Pezzi. Utilizzare il metodo .Add della proprietà associata ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTorandom10Pezzi(random10Pezzi random10Pezzi)
        {
            base.AddObject("random10Pezzi", random10Pezzi);
        }
    
        /// <summary>
        /// Metodo deprecato per l'aggiunta di un nuovo oggetto all'elemento EntitySet tab_archiviomusica. Utilizzare il metodo .Add della proprietà associata ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTotab_archiviomusica(tab_archiviomusica tab_archiviomusica)
        {
            base.AddObject("tab_archiviomusica", tab_archiviomusica);
        }

        #endregion

    }

    #endregion

    #region Entità
    
    /// <summary>
    /// Nessuna documentazione sui metadati disponibile.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CavalloDiUnaSolaCellulaModel", Name="petizione")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class petizione : EntityObject
    {
        #region Metodo factory
    
        /// <summary>
        /// Crea un nuovo oggetto petizione.
        /// </summary>
        /// <param name="dataInserimento">Valore iniziale della proprietà DataInserimento.</param>
        /// <param name="nome">Valore iniziale della proprietà Nome.</param>
        public static petizione Createpetizione(global::System.DateTime dataInserimento, global::System.String nome)
        {
            petizione petizione = new petizione();
            petizione.DataInserimento = dataInserimento;
            petizione.Nome = nome;
            return petizione;
        }

        #endregion

        #region Proprietà primitive
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ID_Petizione
        {
            get
            {
                return _ID_Petizione;
            }
            set
            {
                OnID_PetizioneChanging(value);
                ReportPropertyChanging("ID_Petizione");
                _ID_Petizione = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ID_Petizione");
                OnID_PetizioneChanged();
            }
        }
        private Nullable<global::System.Decimal> _ID_Petizione;
        partial void OnID_PetizioneChanging(Nullable<global::System.Decimal> value);
        partial void OnID_PetizioneChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataInserimento
        {
            get
            {
                return _DataInserimento;
            }
            set
            {
                if (_DataInserimento != value)
                {
                    OnDataInserimentoChanging(value);
                    ReportPropertyChanging("DataInserimento");
                    _DataInserimento = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DataInserimento");
                    OnDataInserimentoChanged();
                }
            }
        }
        private global::System.DateTime _DataInserimento;
        partial void OnDataInserimentoChanging(global::System.DateTime value);
        partial void OnDataInserimentoChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                if (_Nome != value)
                {
                    OnNomeChanging(value);
                    ReportPropertyChanging("Nome");
                    _Nome = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Nome");
                    OnNomeChanged();
                }
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Commento
        {
            get
            {
                return _Commento;
            }
            set
            {
                OnCommentoChanging(value);
                ReportPropertyChanging("Commento");
                _Commento = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Commento");
                OnCommentoChanged();
            }
        }
        private global::System.String _Commento;
        partial void OnCommentoChanging(global::System.String value);
        partial void OnCommentoChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Nessuna documentazione sui metadati disponibile.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CavalloDiUnaSolaCellulaModel", Name="random10Pezzi")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class random10Pezzi : EntityObject
    {
        #region Metodo factory
    
        /// <summary>
        /// Crea un nuovo oggetto random10Pezzi.
        /// </summary>
        /// <param name="id">Valore iniziale della proprietà id.</param>
        /// <param name="disc_Number">Valore iniziale della proprietà Disc_Number.</param>
        /// <param name="disc_Count">Valore iniziale della proprietà Disc_Count.</param>
        /// <param name="track_Number">Valore iniziale della proprietà Track_Number.</param>
        public static random10Pezzi Createrandom10Pezzi(global::System.Int32 id, global::System.String disc_Number, global::System.String disc_Count, global::System.String track_Number)
        {
            random10Pezzi random10Pezzi = new random10Pezzi();
            random10Pezzi.id = id;
            random10Pezzi.Disc_Number = disc_Number;
            random10Pezzi.Disc_Count = disc_Count;
            random10Pezzi.Track_Number = track_Number;
            return random10Pezzi;
        }

        #endregion

        #region Proprietà primitive
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Artist
        {
            get
            {
                return _Artist;
            }
            set
            {
                OnArtistChanging(value);
                ReportPropertyChanging("Artist");
                _Artist = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Artist");
                OnArtistChanged();
            }
        }
        private global::System.String _Artist;
        partial void OnArtistChanging(global::System.String value);
        partial void OnArtistChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Album_Artist
        {
            get
            {
                return _Album_Artist;
            }
            set
            {
                OnAlbum_ArtistChanging(value);
                ReportPropertyChanging("Album_Artist");
                _Album_Artist = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Album_Artist");
                OnAlbum_ArtistChanged();
            }
        }
        private global::System.String _Album_Artist;
        partial void OnAlbum_ArtistChanging(global::System.String value);
        partial void OnAlbum_ArtistChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Album
        {
            get
            {
                return _Album;
            }
            set
            {
                OnAlbumChanging(value);
                ReportPropertyChanging("Album");
                _Album = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Album");
                OnAlbumChanged();
            }
        }
        private global::System.String _Album;
        partial void OnAlbumChanging(global::System.String value);
        partial void OnAlbumChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Genre
        {
            get
            {
                return _Genre;
            }
            set
            {
                OnGenreChanging(value);
                ReportPropertyChanging("Genre");
                _Genre = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Genre");
                OnGenreChanged();
            }
        }
        private global::System.String _Genre;
        partial void OnGenreChanging(global::System.String value);
        partial void OnGenreChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kind
        {
            get
            {
                return _Kind;
            }
            set
            {
                OnKindChanging(value);
                ReportPropertyChanging("Kind");
                _Kind = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kind");
                OnKindChanged();
            }
        }
        private global::System.String _Kind;
        partial void OnKindChanging(global::System.String value);
        partial void OnKindChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Total_Time
        {
            get
            {
                return _Total_Time;
            }
            set
            {
                OnTotal_TimeChanging(value);
                ReportPropertyChanging("Total_Time");
                _Total_Time = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Total_Time");
                OnTotal_TimeChanged();
            }
        }
        private global::System.String _Total_Time;
        partial void OnTotal_TimeChanging(global::System.String value);
        partial void OnTotal_TimeChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Disc_Number
        {
            get
            {
                return _Disc_Number;
            }
            set
            {
                if (_Disc_Number != value)
                {
                    OnDisc_NumberChanging(value);
                    ReportPropertyChanging("Disc_Number");
                    _Disc_Number = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Disc_Number");
                    OnDisc_NumberChanged();
                }
            }
        }
        private global::System.String _Disc_Number;
        partial void OnDisc_NumberChanging(global::System.String value);
        partial void OnDisc_NumberChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Disc_Count
        {
            get
            {
                return _Disc_Count;
            }
            set
            {
                if (_Disc_Count != value)
                {
                    OnDisc_CountChanging(value);
                    ReportPropertyChanging("Disc_Count");
                    _Disc_Count = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Disc_Count");
                    OnDisc_CountChanged();
                }
            }
        }
        private global::System.String _Disc_Count;
        partial void OnDisc_CountChanging(global::System.String value);
        partial void OnDisc_CountChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Track_Number
        {
            get
            {
                return _Track_Number;
            }
            set
            {
                if (_Track_Number != value)
                {
                    OnTrack_NumberChanging(value);
                    ReportPropertyChanging("Track_Number");
                    _Track_Number = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Track_Number");
                    OnTrack_NumberChanged();
                }
            }
        }
        private global::System.String _Track_Number;
        partial void OnTrack_NumberChanging(global::System.String value);
        partial void OnTrack_NumberChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Track_Count
        {
            get
            {
                return _Track_Count;
            }
            set
            {
                OnTrack_CountChanging(value);
                ReportPropertyChanging("Track_Count");
                _Track_Count = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Track_Count");
                OnTrack_CountChanged();
            }
        }
        private global::System.String _Track_Count;
        partial void OnTrack_CountChanging(global::System.String value);
        partial void OnTrack_CountChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.String _Year;
        partial void OnYearChanging(global::System.String value);
        partial void OnYearChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date_Modified
        {
            get
            {
                return _Date_Modified;
            }
            set
            {
                OnDate_ModifiedChanging(value);
                ReportPropertyChanging("Date_Modified");
                _Date_Modified = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date_Modified");
                OnDate_ModifiedChanged();
            }
        }
        private global::System.String _Date_Modified;
        partial void OnDate_ModifiedChanging(global::System.String value);
        partial void OnDate_ModifiedChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date_Added
        {
            get
            {
                return _Date_Added;
            }
            set
            {
                OnDate_AddedChanging(value);
                ReportPropertyChanging("Date_Added");
                _Date_Added = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date_Added");
                OnDate_AddedChanged();
            }
        }
        private global::System.String _Date_Added;
        partial void OnDate_AddedChanging(global::System.String value);
        partial void OnDate_AddedChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bit_Rate
        {
            get
            {
                return _Bit_Rate;
            }
            set
            {
                OnBit_RateChanging(value);
                ReportPropertyChanging("Bit_Rate");
                _Bit_Rate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bit_Rate");
                OnBit_RateChanged();
            }
        }
        private global::System.String _Bit_Rate;
        partial void OnBit_RateChanging(global::System.String value);
        partial void OnBit_RateChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sample_Rate
        {
            get
            {
                return _Sample_Rate;
            }
            set
            {
                OnSample_RateChanging(value);
                ReportPropertyChanging("Sample_Rate");
                _Sample_Rate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sample_Rate");
                OnSample_RateChanged();
            }
        }
        private global::System.String _Sample_Rate;
        partial void OnSample_RateChanging(global::System.String value);
        partial void OnSample_RateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Nessuna documentazione sui metadati disponibile.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CavalloDiUnaSolaCellulaModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Metodo factory
    
        /// <summary>
        /// Crea un nuovo oggetto sysdiagrams.
        /// </summary>
        /// <param name="name">Valore iniziale della proprietà name.</param>
        /// <param name="principal_id">Valore iniziale della proprietà principal_id.</param>
        /// <param name="diagram_id">Valore iniziale della proprietà diagram_id.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Proprietà primitive
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Nessuna documentazione sui metadati disponibile.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CavalloDiUnaSolaCellulaModel", Name="tab_archiviomusica")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tab_archiviomusica : EntityObject
    {
        #region Metodo factory
    
        /// <summary>
        /// Crea un nuovo oggetto tab_archiviomusica.
        /// </summary>
        /// <param name="id">Valore iniziale della proprietà id.</param>
        /// <param name="disc_Number">Valore iniziale della proprietà Disc_Number.</param>
        /// <param name="disc_Count">Valore iniziale della proprietà Disc_Count.</param>
        /// <param name="track_Number">Valore iniziale della proprietà Track_Number.</param>
        public static tab_archiviomusica Createtab_archiviomusica(global::System.Int32 id, global::System.String disc_Number, global::System.String disc_Count, global::System.String track_Number)
        {
            tab_archiviomusica tab_archiviomusica = new tab_archiviomusica();
            tab_archiviomusica.id = id;
            tab_archiviomusica.Disc_Number = disc_Number;
            tab_archiviomusica.Disc_Count = disc_Count;
            tab_archiviomusica.Track_Number = track_Number;
            return tab_archiviomusica;
        }

        #endregion

        #region Proprietà primitive
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Artist
        {
            get
            {
                return _Artist;
            }
            set
            {
                OnArtistChanging(value);
                ReportPropertyChanging("Artist");
                _Artist = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Artist");
                OnArtistChanged();
            }
        }
        private global::System.String _Artist;
        partial void OnArtistChanging(global::System.String value);
        partial void OnArtistChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Album_Artist
        {
            get
            {
                return _Album_Artist;
            }
            set
            {
                OnAlbum_ArtistChanging(value);
                ReportPropertyChanging("Album_Artist");
                _Album_Artist = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Album_Artist");
                OnAlbum_ArtistChanged();
            }
        }
        private global::System.String _Album_Artist;
        partial void OnAlbum_ArtistChanging(global::System.String value);
        partial void OnAlbum_ArtistChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Album
        {
            get
            {
                return _Album;
            }
            set
            {
                OnAlbumChanging(value);
                ReportPropertyChanging("Album");
                _Album = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Album");
                OnAlbumChanged();
            }
        }
        private global::System.String _Album;
        partial void OnAlbumChanging(global::System.String value);
        partial void OnAlbumChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Genre
        {
            get
            {
                return _Genre;
            }
            set
            {
                OnGenreChanging(value);
                ReportPropertyChanging("Genre");
                _Genre = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Genre");
                OnGenreChanged();
            }
        }
        private global::System.String _Genre;
        partial void OnGenreChanging(global::System.String value);
        partial void OnGenreChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Kind
        {
            get
            {
                return _Kind;
            }
            set
            {
                OnKindChanging(value);
                ReportPropertyChanging("Kind");
                _Kind = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Kind");
                OnKindChanged();
            }
        }
        private global::System.String _Kind;
        partial void OnKindChanging(global::System.String value);
        partial void OnKindChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.String _Size;
        partial void OnSizeChanging(global::System.String value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Total_Time
        {
            get
            {
                return _Total_Time;
            }
            set
            {
                OnTotal_TimeChanging(value);
                ReportPropertyChanging("Total_Time");
                _Total_Time = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Total_Time");
                OnTotal_TimeChanged();
            }
        }
        private global::System.String _Total_Time;
        partial void OnTotal_TimeChanging(global::System.String value);
        partial void OnTotal_TimeChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Disc_Number
        {
            get
            {
                return _Disc_Number;
            }
            set
            {
                OnDisc_NumberChanging(value);
                ReportPropertyChanging("Disc_Number");
                _Disc_Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Disc_Number");
                OnDisc_NumberChanged();
            }
        }
        private global::System.String _Disc_Number;
        partial void OnDisc_NumberChanging(global::System.String value);
        partial void OnDisc_NumberChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Disc_Count
        {
            get
            {
                return _Disc_Count;
            }
            set
            {
                OnDisc_CountChanging(value);
                ReportPropertyChanging("Disc_Count");
                _Disc_Count = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Disc_Count");
                OnDisc_CountChanged();
            }
        }
        private global::System.String _Disc_Count;
        partial void OnDisc_CountChanging(global::System.String value);
        partial void OnDisc_CountChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Track_Number
        {
            get
            {
                return _Track_Number;
            }
            set
            {
                OnTrack_NumberChanging(value);
                ReportPropertyChanging("Track_Number");
                _Track_Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Track_Number");
                OnTrack_NumberChanged();
            }
        }
        private global::System.String _Track_Number;
        partial void OnTrack_NumberChanging(global::System.String value);
        partial void OnTrack_NumberChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Track_Count
        {
            get
            {
                return _Track_Count;
            }
            set
            {
                OnTrack_CountChanging(value);
                ReportPropertyChanging("Track_Count");
                _Track_Count = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Track_Count");
                OnTrack_CountChanged();
            }
        }
        private global::System.String _Track_Count;
        partial void OnTrack_CountChanging(global::System.String value);
        partial void OnTrack_CountChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.String _Year;
        partial void OnYearChanging(global::System.String value);
        partial void OnYearChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date_Modified
        {
            get
            {
                return _Date_Modified;
            }
            set
            {
                OnDate_ModifiedChanging(value);
                ReportPropertyChanging("Date_Modified");
                _Date_Modified = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date_Modified");
                OnDate_ModifiedChanged();
            }
        }
        private global::System.String _Date_Modified;
        partial void OnDate_ModifiedChanging(global::System.String value);
        partial void OnDate_ModifiedChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date_Added
        {
            get
            {
                return _Date_Added;
            }
            set
            {
                OnDate_AddedChanging(value);
                ReportPropertyChanging("Date_Added");
                _Date_Added = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date_Added");
                OnDate_AddedChanged();
            }
        }
        private global::System.String _Date_Added;
        partial void OnDate_AddedChanging(global::System.String value);
        partial void OnDate_AddedChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bit_Rate
        {
            get
            {
                return _Bit_Rate;
            }
            set
            {
                OnBit_RateChanging(value);
                ReportPropertyChanging("Bit_Rate");
                _Bit_Rate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bit_Rate");
                OnBit_RateChanged();
            }
        }
        private global::System.String _Bit_Rate;
        partial void OnBit_RateChanging(global::System.String value);
        partial void OnBit_RateChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sample_Rate
        {
            get
            {
                return _Sample_Rate;
            }
            set
            {
                OnSample_RateChanging(value);
                ReportPropertyChanging("Sample_Rate");
                _Sample_Rate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sample_Rate");
                OnSample_RateChanged();
            }
        }
        private global::System.String _Sample_Rate;
        partial void OnSample_RateChanging(global::System.String value);
        partial void OnSample_RateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Nessuna documentazione sui metadati disponibile.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CavalloDiUnaSolaCellulaModel", Name="tab_mappa")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tab_mappa : EntityObject
    {
        #region Metodo factory
    
        /// <summary>
        /// Crea un nuovo oggetto tab_mappa.
        /// </summary>
        /// <param name="id_page">Valore iniziale della proprietà id_page.</param>
        /// <param name="id_menu">Valore iniziale della proprietà id_menu.</param>
        /// <param name="menu">Valore iniziale della proprietà menu.</param>
        /// <param name="page_name">Valore iniziale della proprietà page_name.</param>
        public static tab_mappa Createtab_mappa(global::System.Decimal id_page, global::System.Decimal id_menu, global::System.String menu, global::System.String page_name)
        {
            tab_mappa tab_mappa = new tab_mappa();
            tab_mappa.id_page = id_page;
            tab_mappa.id_menu = id_menu;
            tab_mappa.menu = menu;
            tab_mappa.page_name = page_name;
            return tab_mappa;
        }

        #endregion

        #region Proprietà primitive
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal id_page
        {
            get
            {
                return _id_page;
            }
            set
            {
                if (_id_page != value)
                {
                    Onid_pageChanging(value);
                    ReportPropertyChanging("id_page");
                    _id_page = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_page");
                    Onid_pageChanged();
                }
            }
        }
        private global::System.Decimal _id_page;
        partial void Onid_pageChanging(global::System.Decimal value);
        partial void Onid_pageChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal id_menu
        {
            get
            {
                return _id_menu;
            }
            set
            {
                if (_id_menu != value)
                {
                    Onid_menuChanging(value);
                    ReportPropertyChanging("id_menu");
                    _id_menu = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id_menu");
                    Onid_menuChanged();
                }
            }
        }
        private global::System.Decimal _id_menu;
        partial void Onid_menuChanging(global::System.Decimal value);
        partial void Onid_menuChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String menu
        {
            get
            {
                return _menu;
            }
            set
            {
                if (_menu != value)
                {
                    OnmenuChanging(value);
                    ReportPropertyChanging("menu");
                    _menu = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("menu");
                    OnmenuChanged();
                }
            }
        }
        private global::System.String _menu;
        partial void OnmenuChanging(global::System.String value);
        partial void OnmenuChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String page_name
        {
            get
            {
                return _page_name;
            }
            set
            {
                if (_page_name != value)
                {
                    Onpage_nameChanging(value);
                    ReportPropertyChanging("page_name");
                    _page_name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("page_name");
                    Onpage_nameChanged();
                }
            }
        }
        private global::System.String _page_name;
        partial void Onpage_nameChanging(global::System.String value);
        partial void Onpage_nameChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String page_description
        {
            get
            {
                return _page_description;
            }
            set
            {
                Onpage_descriptionChanging(value);
                ReportPropertyChanging("page_description");
                _page_description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("page_description");
                Onpage_descriptionChanged();
            }
        }
        private global::System.String _page_description;
        partial void Onpage_descriptionChanging(global::System.String value);
        partial void Onpage_descriptionChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String map_index
        {
            get
            {
                return _map_index;
            }
            set
            {
                Onmap_indexChanging(value);
                ReportPropertyChanging("map_index");
                _map_index = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("map_index");
                Onmap_indexChanged();
            }
        }
        private global::System.String _map_index;
        partial void Onmap_indexChanging(global::System.String value);
        partial void Onmap_indexChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> parameter
        {
            get
            {
                return _parameter;
            }
            set
            {
                OnparameterChanging(value);
                ReportPropertyChanging("parameter");
                _parameter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("parameter");
                OnparameterChanged();
            }
        }
        private Nullable<global::System.Byte> _parameter;
        partial void OnparameterChanging(Nullable<global::System.Byte> value);
        partial void OnparameterChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Nessuna documentazione sui metadati disponibile.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CavalloDiUnaSolaCellulaModel", Name="tab_progetti")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tab_progetti : EntityObject
    {
        #region Metodo factory
    
        /// <summary>
        /// Crea un nuovo oggetto tab_progetti.
        /// </summary>
        /// <param name="sezione">Valore iniziale della proprietà sezione.</param>
        /// <param name="progetto">Valore iniziale della proprietà progetto.</param>
        /// <param name="categoria">Valore iniziale della proprietà categoria.</param>
        /// <param name="settore">Valore iniziale della proprietà settore.</param>
        /// <param name="inizio">Valore iniziale della proprietà inizio.</param>
        /// <param name="fine">Valore iniziale della proprietà fine.</param>
        /// <param name="descrizione">Valore iniziale della proprietà descrizione.</param>
        /// <param name="cliente_descrizione">Valore iniziale della proprietà cliente_descrizione.</param>
        /// <param name="cliente_riferimentoWEB">Valore iniziale della proprietà cliente_riferimentoWEB.</param>
        /// <param name="immagine">Valore iniziale della proprietà immagine.</param>
        public static tab_progetti Createtab_progetti(global::System.String sezione, global::System.String progetto, global::System.String categoria, global::System.String settore, global::System.DateTime inizio, global::System.DateTime fine, global::System.String descrizione, global::System.String cliente_descrizione, global::System.String cliente_riferimentoWEB, global::System.Byte[] immagine)
        {
            tab_progetti tab_progetti = new tab_progetti();
            tab_progetti.sezione = sezione;
            tab_progetti.progetto = progetto;
            tab_progetti.categoria = categoria;
            tab_progetti.settore = settore;
            tab_progetti.inizio = inizio;
            tab_progetti.fine = fine;
            tab_progetti.descrizione = descrizione;
            tab_progetti.cliente_descrizione = cliente_descrizione;
            tab_progetti.cliente_riferimentoWEB = cliente_riferimentoWEB;
            tab_progetti.immagine = immagine;
            return tab_progetti;
        }

        #endregion

        #region Proprietà primitive
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id_progetto
        {
            get
            {
                return _id_progetto;
            }
            set
            {
                Onid_progettoChanging(value);
                ReportPropertyChanging("id_progetto");
                _id_progetto = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_progetto");
                Onid_progettoChanged();
            }
        }
        private Nullable<global::System.Int32> _id_progetto;
        partial void Onid_progettoChanging(Nullable<global::System.Int32> value);
        partial void Onid_progettoChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String sezione
        {
            get
            {
                return _sezione;
            }
            set
            {
                if (_sezione != value)
                {
                    OnsezioneChanging(value);
                    ReportPropertyChanging("sezione");
                    _sezione = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("sezione");
                    OnsezioneChanged();
                }
            }
        }
        private global::System.String _sezione;
        partial void OnsezioneChanging(global::System.String value);
        partial void OnsezioneChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String progetto
        {
            get
            {
                return _progetto;
            }
            set
            {
                if (_progetto != value)
                {
                    OnprogettoChanging(value);
                    ReportPropertyChanging("progetto");
                    _progetto = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("progetto");
                    OnprogettoChanged();
                }
            }
        }
        private global::System.String _progetto;
        partial void OnprogettoChanging(global::System.String value);
        partial void OnprogettoChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String categoria
        {
            get
            {
                return _categoria;
            }
            set
            {
                if (_categoria != value)
                {
                    OncategoriaChanging(value);
                    ReportPropertyChanging("categoria");
                    _categoria = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("categoria");
                    OncategoriaChanged();
                }
            }
        }
        private global::System.String _categoria;
        partial void OncategoriaChanging(global::System.String value);
        partial void OncategoriaChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String settore
        {
            get
            {
                return _settore;
            }
            set
            {
                if (_settore != value)
                {
                    OnsettoreChanging(value);
                    ReportPropertyChanging("settore");
                    _settore = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("settore");
                    OnsettoreChanged();
                }
            }
        }
        private global::System.String _settore;
        partial void OnsettoreChanging(global::System.String value);
        partial void OnsettoreChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime inizio
        {
            get
            {
                return _inizio;
            }
            set
            {
                if (_inizio != value)
                {
                    OninizioChanging(value);
                    ReportPropertyChanging("inizio");
                    _inizio = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("inizio");
                    OninizioChanged();
                }
            }
        }
        private global::System.DateTime _inizio;
        partial void OninizioChanging(global::System.DateTime value);
        partial void OninizioChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime fine
        {
            get
            {
                return _fine;
            }
            set
            {
                if (_fine != value)
                {
                    OnfineChanging(value);
                    ReportPropertyChanging("fine");
                    _fine = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("fine");
                    OnfineChanged();
                }
            }
        }
        private global::System.DateTime _fine;
        partial void OnfineChanging(global::System.DateTime value);
        partial void OnfineChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String descrizione
        {
            get
            {
                return _descrizione;
            }
            set
            {
                if (_descrizione != value)
                {
                    OndescrizioneChanging(value);
                    ReportPropertyChanging("descrizione");
                    _descrizione = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("descrizione");
                    OndescrizioneChanged();
                }
            }
        }
        private global::System.String _descrizione;
        partial void OndescrizioneChanging(global::System.String value);
        partial void OndescrizioneChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cliente_descrizione
        {
            get
            {
                return _cliente_descrizione;
            }
            set
            {
                if (_cliente_descrizione != value)
                {
                    Oncliente_descrizioneChanging(value);
                    ReportPropertyChanging("cliente_descrizione");
                    _cliente_descrizione = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("cliente_descrizione");
                    Oncliente_descrizioneChanged();
                }
            }
        }
        private global::System.String _cliente_descrizione;
        partial void Oncliente_descrizioneChanging(global::System.String value);
        partial void Oncliente_descrizioneChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cliente_riferimentoWEB
        {
            get
            {
                return _cliente_riferimentoWEB;
            }
            set
            {
                if (_cliente_riferimentoWEB != value)
                {
                    Oncliente_riferimentoWEBChanging(value);
                    ReportPropertyChanging("cliente_riferimentoWEB");
                    _cliente_riferimentoWEB = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("cliente_riferimentoWEB");
                    Oncliente_riferimentoWEBChanged();
                }
            }
        }
        private global::System.String _cliente_riferimentoWEB;
        partial void Oncliente_riferimentoWEBChanging(global::System.String value);
        partial void Oncliente_riferimentoWEBChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] immagine
        {
            get
            {
                return StructuralObject.GetValidValue(_immagine);
            }
            set
            {
                if (!StructuralObject.BinaryEquals(_immagine, value))
                {
                    OnimmagineChanging(value);
                    ReportPropertyChanging("immagine");
                    _immagine = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("immagine");
                    OnimmagineChanged();
                }
            }
        }
        private global::System.Byte[] _immagine;
        partial void OnimmagineChanging(global::System.Byte[] value);
        partial void OnimmagineChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Nessuna documentazione sui metadati disponibile.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CavalloDiUnaSolaCellulaModel", Name="tab_utenti")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tab_utenti : EntityObject
    {
        #region Metodo factory
    
        /// <summary>
        /// Crea un nuovo oggetto tab_utenti.
        /// </summary>
        /// <param name="username">Valore iniziale della proprietà username.</param>
        /// <param name="password">Valore iniziale della proprietà password.</param>
        /// <param name="email">Valore iniziale della proprietà email.</param>
        public static tab_utenti Createtab_utenti(global::System.String username, global::System.String password, global::System.String email)
        {
            tab_utenti tab_utenti = new tab_utenti();
            tab_utenti.username = username;
            tab_utenti.password = password;
            tab_utenti.email = email;
            return tab_utenti;
        }

        #endregion

        #region Proprietà primitive
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> id_utente
        {
            get
            {
                return _id_utente;
            }
            set
            {
                Onid_utenteChanging(value);
                ReportPropertyChanging("id_utente");
                _id_utente = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_utente");
                Onid_utenteChanged();
            }
        }
        private Nullable<global::System.Byte> _id_utente;
        partial void Onid_utenteChanging(Nullable<global::System.Byte> value);
        partial void Onid_utenteChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                if (_username != value)
                {
                    OnusernameChanging(value);
                    ReportPropertyChanging("username");
                    _username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("username");
                    OnusernameChanged();
                }
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                if (_password != value)
                {
                    OnpasswordChanging(value);
                    ReportPropertyChanging("password");
                    _password = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("password");
                    OnpasswordChanged();
                }
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                if (_email != value)
                {
                    OnemailChanging(value);
                    ReportPropertyChanging("email");
                    _email = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("email");
                    OnemailChanged();
                }
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String utente
        {
            get
            {
                return _utente;
            }
            set
            {
                OnutenteChanging(value);
                ReportPropertyChanging("utente");
                _utente = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("utente");
                OnutenteChanged();
            }
        }
        private global::System.String _utente;
        partial void OnutenteChanging(global::System.String value);
        partial void OnutenteChanged();
    
        /// <summary>
        /// Nessuna documentazione sui metadati disponibile.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String profilo
        {
            get
            {
                return _profilo;
            }
            set
            {
                OnprofiloChanging(value);
                ReportPropertyChanging("profilo");
                _profilo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("profilo");
                OnprofiloChanged();
            }
        }
        private global::System.String _profilo;
        partial void OnprofiloChanging(global::System.String value);
        partial void OnprofiloChanged();

        #endregion

    
    }

    #endregion

    
}
